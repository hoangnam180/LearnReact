{
    "sourceFile": "src/API/axiosClient.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 4,
            "patches": [
                {
                    "date": 1644223538266,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1644224135248,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,8 +23,12 @@\n   }, function (error) {\n     // Any status codes that falls outside the range of 2xx cause this function to trigger\n     // Do something with response error\n     console.log(error.response)\n+    const {config,status} = error.response;\n+    if(config.url === 'auth/local/register' && status === 400){\n+      throw new Error('Custom Error Here')\n+    }\n     return Promise.reject(error);\n   });\n \n export default axiosClient\n\\ No newline at end of file\n"
                },
                {
                    "date": 1644224144372,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,9 +22,9 @@\n     return response.data;\n   }, function (error) {\n     // Any status codes that falls outside the range of 2xx cause this function to trigger\n     // Do something with response error\n-    console.log(error.response)\n+    // console.log(error.response)\n     const {config,status} = error.response;\n     if(config.url === 'auth/local/register' && status === 400){\n       throw new Error('Custom Error Here')\n     }\n"
                },
                {
                    "date": 1644224246264,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,10 +22,10 @@\n     return response.data;\n   }, function (error) {\n     // Any status codes that falls outside the range of 2xx cause this function to trigger\n     // Do something with response error\n-    // console.log(error.response)\n-    const {config,status} = error.response;\n+    console.log(error.response)\n+    const {config,status,data} = error.response;\n     if(config.url === 'auth/local/register' && status === 400){\n       throw new Error('Custom Error Here')\n     }\n     return Promise.reject(error);\n"
                },
                {
                    "date": 1644224666129,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,14 @@\n     // Do something with response error\n     console.log(error.response)\n     const {config,status,data} = error.response;\n     if(config.url === 'auth/local/register' && status === 400){\n-      throw new Error('Custom Error Here')\n+      const errorList = data.data || [];\n+      const firstError = errorList.length > 0 ? errorList[0] : {};\n+      const messageList = firstError.messages || [];\n+      const firstMessage = messageList.length > 0 ? messageList[0] : {};\n+\n+      throw new Error(firstMessage.message)\n     }\n     return Promise.reject(error);\n   });\n \n"
                }
            ],
            "date": 1644223538266,
            "name": "Commit-0",
            "content": "import axios from 'axios'\n\nconst axiosClient = axios.create({\n    baseURL:'https://api.ezfrontend.com/',\n    headers:{\n        'Content-type' : 'application/json',\n    },\n})\n\naxiosClient.interceptors.request.use(function (config) {\n    // Do something before request is sent\n    return config;\n  }, function (error) {\n    // Do something with request error\n    return Promise.reject(error);\n  });\n\n// Add a response interceptor\naxiosClient.interceptors.response.use(function (response) {\n    // Any status code that lie within the range of 2xx cause this function to trigger\n    // Do something with response data\n    return response.data;\n  }, function (error) {\n    // Any status codes that falls outside the range of 2xx cause this function to trigger\n    // Do something with response error\n    console.log(error.response)\n    return Promise.reject(error);\n  });\n\nexport default axiosClient"
        }
    ]
}